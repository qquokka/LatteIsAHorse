##Server Properties
##define server configsÂ
server.port=443
server.ssl.enabled=true
server.ssl.key-store = C:/Users/multicampus/Desktop/LatteIsAHorse/Backend/src/main/resources/keystore.p12
#server.ssl.key-store = /home/ubuntu/keystore.p12
server.ssl.key-store-password = !hbh20002
server.ssl.keyStoreType = PKCS12
server.ssl.keyAlias = tomcat
# 만약 스프링 시큐리티를 사용중이라면 아래 설정도 포함
security.require-ssl=true

server.tomcat.remote_ip_header=x-forwarded-for
server.tomcat.protocol_header=x-forwarded-proto

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://192.168.31.142:3306/latte?useSSL=false&useUniCode=yes&characterEncoding=UTF-8&serverTimezone=UTC
#spring.datasource.username=testuser
#spring.datasource.password=1234

spring.datasource.url=jdbc:mysql://192.168.31.142:3306/latte?useSSL=false&useUniCode=yes&characterEncoding=UTF-8&serverTimezone=UTC&useLegacyDatetimeCode=fals
spring.datasource.username=testuser
spring.datasource.password=1234
#spring.datasource.url=jdbc:mysql://13.125.168.55:3306/latte?useSSL=false&useUniCode=yes&characterEncoding=UTF-8&serverTimezone=UTC&useLegacyDatetimeCode=false
#spring.datasource.username=root
#spring.datasource.password=0987654321a

spring.datasource.sql-script-encoding=UTF-8

## Hibernate Properties

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.hibernate.ddl-auto = update

## Hibernate Logging
logging.level.org.hibernate.sql=debug

# Initialize the datasource with available DDL and DML scripts
spring.datasource.initialization-mode=always

## Jackson Properties
spring.jackson.serialization.write-date-keys-as-timestamps=false
spring.jackson.time-zone=UTC

## App Properties
app.jwtSecret=JWTSuperSecretKey
app.jwtExpirationMs=3600000

##KaKao REST API Key
kakao.restapi.key=KakaoAK c7d2e9f035b299cf83c030b0cfbae009

## Multipart propertis
# Enable multipart upload
spring.servlet.multipart.enabled=true

# Max file size
spring.servlet.multipart.max-file-size=10MB

# Max Request Size
spring.servlet.multipart.max-request-size=10MB

## File Storage propertis
# All files uploaded through the REST API will be stored in this directory
 
## íë¡ì í¸ë´ì í´ëì ìë¡ë íì¼ì ì¤ì íê³  ì¶ì¼ë©´ 16ë²ì§¸ ì¤ì²ë¼ 
## ë³¸ì¸ PCì í¹ì  dirì ìë¡ë íê³  ì¶ì¼ë©´ 17ë²ì¨° ì¤ì²ë¼ ì¤ì íë¤. 
file.upload-dir=./images
file.thumbnail-dir=./thumbnail
#file.upload-dir=/Users/pang/Documents/UPLOAD_FILES

#mybatis.config-location=classpath:mybatis-config.xml
#mybatis.mapper-locations=classpath:mapper/*.xml
