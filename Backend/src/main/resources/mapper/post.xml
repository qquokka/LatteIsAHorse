<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.post">

	<select id="getPostList" resultType="com.latte.model.post.Post">
		SELECT 
		P.ID, P.CREATED_AT, P.UPDATED_AT, P.LIKE_COUNT, P.THUMBNAIL, P.TITLE, P.CONTENT, 
		U.USERNAME AS WRITER_NAME 
		FROM POSTS P, USERS U
		WHERE P.WRITER_ID = U.ID ORDER BY UPDATED_AT DESC
	</select>

	<insert id="addPost" parameterType="com.latte.payload.PostAddRequest">
		INSERT INTO POSTS 
		(TITLE, CONTENT, THUMBNAIL, CREATED_AT, UPDATED_AT, WRITER_ID)
		VALUES
		(#{title}, #{content}, #{thumbnail}, NOW(), NOW(), #{writer_id})
	</insert>
	<!-- <select id="getPostByPostId" parameterType="java.lang.Integer" resultType="com.latte.dto.PostDto"> 
		</select> -->
	
	
	<select id="getPostById" resultType="post">
		SELECT P.*, U.USERNAME AS WRITER_NAME 
		FROM POSTS P, USERS U 
		WHERE P.ID = #{id} AND P.WRITER_ID = U.ID
	</select>
	
	<select id="getPostByTitle" resultType="post">
		SELECT P.*, U.USERNAME AS WRITER_NAME 
		FROM POSTS P, USERS U 
		WHERE P.TITLE LIKE "%"#{title}"%" AND P.WRITER_ID = U.ID
	</select>
	
	<!-- 가장 마지막에 저장된 Post의 ID 반환 -->
	<select id="getLastPostedId" resultType="java.lang.Long">
		SELECT MAX(ID) FROM POSTS
	</select>
	
	<update id="updatePostById">
		UPDATE POSTS SET 
		TITLE = #{title},
		CONTENT = #{content},
		THUMBNAIL = #{thumbnail},
		UPDATED_AT = NOW() 
		WHERE ID = #{id}
	</update>
	
	<delete id="deletePostById">
		DELETE FROM POSTS WHERE ID = #{id}
	</delete>
	
	<!-- Post Hashtag related queries -->
	<select id="getPostHashTags" resultType="posthashtag">
		SELECT NAME FROM POSTS P, POST_HASHTAG PH 
		WHERE P.ID = PH.POST_ID
	</select>
	
	<select id="getAllHashTags" resultType="posthashtag">
		SELECT DISTINCT NAME FROM POST_HASHTAG 
	</select>
	
	<insert id="addPostHashtag">
		INSERT INTO POST_HASHTAG 
		(NAME, POST_ID)
		VALUES 
		(#{name}, #{post_id})
	</insert>
	
	<update id="updatePostHashtag">
		UPDATE POST_HASHTAG SET NAME = #{name} WHERE ID = #{id}
	</update>
	
	<delete id="deletePostHashtag">
		DELETE FROM POST_HASHTAG WHERE ID = #{id}
	</delete>
	
	<!-- Post Comments CRUD -->
	
	<select id="getPostComments" resultType="postComments">
		SELECT PC.*, U.USERNAME AS WRITER_NAME 
		FROM POSTS P, POST_COMMENTS PC, USERS U 
		WHERE 
		P.ID = #{post_id} AND U.ID = #{writer_id}
	</select>
	
	<insert id="addPostComments">
		INSERT INTO POST_COMMENTS 
		(CREATED_AT, UPDATED_AT, CONTENT, POST_ID, WRITER_ID)
		VALUES 
		(NOW(), NOW(), #{content}, #{post_id}, #{writer_id)
	</insert>
	
	<update id="updatePostComments">
		UPDATE POST_COMMENTS SET 
		UPDATED_AT = NOW(),
		CONTENT = #{content}
		WHERE ID = #{id}
	</update>
	
	<delete id="deletePostComments">
		DELETE FROM POST_COMMENTS WHERE ID = #{id}
	</delete>
	
	
	
</mapper>
