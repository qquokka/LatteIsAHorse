<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.post">
	<select id="getPostList" resultType="post">
		select
		p.id, p.created_at,
		p.updated_at, p.like_count, p.thumbnail, p.title,
		p.content,
		u.username
		as writer_name,
		p.cafe_id
		from posts p, users u
		where p.writer_id = u.id
		order by
		updated_at desc
	</select>
	
	<insert id="addPost" parameterType="com.latte.payload.PostAddRequest">
		insert into posts
		(title, content, thumbnail, created_at,
		updated_at, writer_id, cafe_id)
		values
		(#{title}, #{content},
		#{thumbnail},
		now(), now(), #{writer_id}, #{cafe_id})
	</insert>
	<!-- <select id="getPostByPostId" parameterType="java.lang.Integer" resultType="com.latte.dto.PostDto">
		</select> -->
	<select id="getPostById" resultType="post">
		select p.*, u.username as
		writer_name
		from posts p, users u
		where p.id = #{id} and p.writer_id =
		u.id
	</select>
	
	<select id="getPostByTitle" resultType="post">
		select p.*, u.username as
		writer_name
		from posts p, users u
		where p.title like "%"#{title}"%" and
		p.writer_id = u.id
	</select>
	
	<select id="getPostListByCafeId" parameterType="java.lang.Integer" resultType="post">
		select p.*,u.username as
		writer_name from posts p, users u where
		u.id =p.writer_id and cafe_id
		=#{cafe_id}
	</select>
	
	<!-- 가장 마지막에 저장된 Post의 ID 반환 -->
	<select id="getLastPostedId" resultType="java.lang.Long">
		select max(id) from posts
	</select>
	
	<update id="updatePostById">
		update posts set
		title = #{title},
		content =
		#{content},
		thumbnail = #{thumbnail},
		updated_at =
		now()
		where id = #{id}
	</update>

	<select id="getMyPostList" parameterType="java.lang.Long" resultType="post">
		select * from posts where writer_id =#{user_id}
	</select>

	<delete id="deletePostById">
		delete from posts where id = #{id}
	</delete>

	<!-- Post Comments CRUD -->
	<select id="getPostCommentsByPostId" resultType="postComments">
		select pc.*,
		u.username as writer_name from post_comments pc join users u on
		u.id=pc.writer_id where post_id =#{post_id}
	</select>
	
	<insert id="addPostComments">
		insert into post_comments
		(created_at, updated_at,
		content, post_id, writer_id)
		values
		(now(), now(), #{content},
		#{post_id}, #{writer_id})
	</insert>
	
	<update id="updatePostComments">
		update post_comments set
		updated_at = now(),
		content =
		#{content}
		where id = #{id}
	</update>
	
	<delete id="deletePostComments">
		delete from post_comments where id = #{id}
	</delete>

	<select id="getAllPostComments" resultType="postComments">
		select pc.* ,
		u.username as writer_name from post_comments pc join users u on
		u.id=pc.writer_id
	</select>
  
	<select id="getMyPostCommentsList" parameterType="java.lang.Long" resultType="postComments">
		select * from
		post_comments
		where writer_id = #{user_id}
	</select>
</mapper>

